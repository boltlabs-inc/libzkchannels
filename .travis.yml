language: rust

services:
  - redis-server

cache:
  directories:
    - ~/bitcoin/bitcoin-0.19.1/bin

before_install:
  - echo $TRAVIS_OS_NAME
  - set -e
  - . ./env && ./deps/install_packages.sh
  - sudo dpkg -i ./deps/emp-sh2pc/libcrypto++9v5*.deb
  - sudo dpkg -i ./deps/emp-sh2pc/libcrypto++-dev*.deb
  - . ./env && make deps
  - redis-server --daemonize yes
  - redis-cli info
  - echo -e "$PWD/deps/root/lib\n$PWD/target/release" | sudo tee /etc/ld.so.conf.d/libzkchannels.conf && sudo ldconfig
  - set +e

rust:
  - stable

matrix:
  include:
    - stage: Rust tests
      language: rust
      rust: stable
      script:
        - . ./env
        - env
        - cargo build --release
        - cargo test --release --lib mpcwrapper -- --nocapture
        - cargo test --release --lib channels_mpc -- --nocapture
        - ./test_ignored.sh
        
    - stage: Go tests
      language: go
      go: "1.13"
      script:
        - curl -sSf https://build.travis-ci.com/files/rustup-init.sh | sh -s -- --default-toolchain=stable --profile=minimal -y
        - export PATH=${TRAVIS_HOME}/.cargo/bin:$PATH
        - cargo --version
        - . ./env
        - env
        - cargo build --release
        - make mpctest
        - ./test_gowrapper.sh

    - stage: Test scenarios with bitcoind
      language: go
      go: "1.13"
      script:
        - bash ./tx/install_bitcoind.sh
        - curl -sSf https://build.travis-ci.com/files/rustup-init.sh | sh -s -- --default-toolchain=stable --profile=minimal -y
        - export PATH=${TRAVIS_HOME}/.cargo/bin:$PATH
        - cargo --version
        - . ./env
        - cargo build --release
        - pip3 install base58 ecdsa hashlib
        - cd tx/ && python3 test_scenarios_bitcoind.py
