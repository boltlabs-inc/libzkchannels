parameter (pair (pair (pair (bytes %chanID) (pair (mutez %custBal) (bytes %custBalB))) (pair (pair (bytes %g2) (mutez %merchBal)) (pair (bytes %merchBalB) (bytes %merchPk0)))) (pair (pair (pair (bytes %merchPk1) (bytes %merchPk2)) (pair (bytes %merchPk3) (bytes %merchPk4))) (pair (pair (bytes %revLock) (bytes %revLockB)) (pair (bytes %s1) (bytes %s2)))));
storage   unit;
code
  {
    DUP;        # pair @parameter @storage : pair @parameter @storage
    CDR;        # @storage : pair @parameter @storage
    SWAP;       # pair @parameter @storage : @storage
    CAR;        # @parameter : @storage
    # == run ==
    # val1 = sp.local("val1", params.merchPk0 + params.chanID) # @parameter : @storage
    DUP;        # @parameter : @parameter : @storage
    CAAAR;      # bytes : @parameter : @storage
    SWAP;       # @parameter : bytes : @storage
    DUP;        # @parameter : @parameter : bytes : @storage
    DUG 2;      # @parameter : bytes : @parameter : @storage
    CADDDR;     # bytes : bytes : @parameter : @storage
    CONCAT;     # bytes : @parameter : @storage
    SWAP;       # @parameter : bytes : @storage
    # val2 = sp.local("val2", params.merchPk1 + params.revLockB) # @parameter : bytes : @storage
    DUP;        # @parameter : @parameter : bytes : @storage
    CDDADR;     # bytes : @parameter : bytes : @storage
    SWAP;       # @parameter : bytes : bytes : @storage
    DUP;        # @parameter : @parameter : bytes : bytes : @storage
    DUG 3;      # @parameter : bytes : bytes : @parameter : @storage
    CDAAAR;     # bytes : bytes : bytes : @parameter : @storage
    CONCAT;     # bytes : bytes : @parameter : @storage
    # val3 = sp.local("val3", params.merchPk2 + params.custBalB) # bytes : bytes : @parameter : @storage
    DIG 2;      # @parameter : bytes : bytes : @storage
    DUP;        # @parameter : @parameter : bytes : bytes : @storage
    CAADDR;     # bytes : @parameter : bytes : bytes : @storage
    SWAP;       # @parameter : bytes : bytes : bytes : @storage
    DUP;        # @parameter : @parameter : bytes : bytes : bytes : @storage
    DUG 4;      # @parameter : bytes : bytes : bytes : @parameter : @storage
    CDAADR;     # bytes : bytes : bytes : bytes : @parameter : @storage
    CONCAT;     # bytes : bytes : bytes : @parameter : @storage
    # val4 = sp.local("val4", params.merchPk3 + params.merchBalB) # bytes : bytes : bytes : @parameter : @storage
    DIG 3;      # @parameter : bytes : bytes : bytes : @storage
    DUP;        # @parameter : @parameter : bytes : bytes : bytes : @storage
    CADDAR;     # bytes : @parameter : bytes : bytes : bytes : @storage
    SWAP;       # @parameter : bytes : bytes : bytes : bytes : @storage
    DUP;        # @parameter : @parameter : bytes : bytes : bytes : bytes : @storage
    DUG 5;      # @parameter : bytes : bytes : bytes : bytes : @parameter : @storage
    CDADAR;     # bytes : bytes : bytes : bytes : bytes : @parameter : @storage
    CONCAT;     # bytes : bytes : bytes : bytes : @parameter : @storage
    # prod1 = sp.local("prod1", (((val1.value + val2.value) + val3.value) + val4.value) + params.merchPk4) # bytes : bytes : bytes : bytes : @parameter : @storage
    DIG 4;      # @parameter : bytes : bytes : bytes : bytes : @storage
    CDADDR;     # bytes : bytes : bytes : bytes : bytes : @storage
    SWAP;       # bytes : bytes : bytes : bytes : bytes : @storage
    DIG 2;      # bytes : bytes : bytes : bytes : bytes : @storage
    DIG 3;      # bytes : bytes : bytes : bytes : bytes : @storage
    DIG 4;      # bytes : bytes : bytes : bytes : bytes : @storage
    CONCAT;     # bytes : bytes : bytes : bytes : @storage
    CONCAT;     # bytes : bytes : bytes : @storage
    CONCAT;     # bytes : bytes : @storage
    CONCAT;     # bytes : @storage
    # out = sp.local("out", False)
    # if sp.len(prod1.value) > 50: # bytes : @storage
    SIZE;       # nat : @storage
    PUSH nat 50; # nat : nat : @storage
    COMPARE;    # int : @storage
    LT;         # bool : @storage
    IF
      {
        # out.value = True # @storage
        PUSH bool True; # bool : @storage
      }
      {
        # out.value = False # @storage
        PUSH bool False; # bool : @storage
      }; # bool : @storage
    # sp.verify(out.value) # bool : @storage
    IF
      {}
      {
        PUSH string "WrongCondition: out.value"; # string : @storage
        FAILWITH;   # FAILED
      }; # @storage
    NIL operation; # list operation : @storage
    PAIR;       # pair (list operation) @storage
  };