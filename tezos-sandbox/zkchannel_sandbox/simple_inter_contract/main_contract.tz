parameter (or (bool %receiveResult) (pair %run (address %k) (nat %x)));
storage   bool;
code
  {
    DUP;        # pair @parameter @storage : pair @parameter @storage
    CDR;        # @storage : pair @parameter @storage
    SWAP;       # pair @parameter @storage : @storage
    CAR;        # @parameter : @storage
    IF_LEFT
      {
        SWAP;       # @storage : @parameter%receiveResult
        DROP;       # @parameter%receiveResult
        # == receiveResult ==
        # self.data.result = params # @parameter%receiveResult
        NIL operation; # list operation : @parameter%receiveResult
      }
      {
        # == run ==
        # sp.transfer(sp.record(k = sp.contract(sp.TNat, sp.to_address(sp.self), entry_point='receiveResult').open_some(), x = params.x), sp.tez(0), sp.contract(sp.TRecord(k = sp.TContract(sp.TNat), x = sp.TNat).layout(("k", "x")), params.k, entry_point='run').open_some()) # @parameter%run : @storage
        DUP;        # @parameter%run : @parameter%run : @storage
        CAR;        # address : @parameter%run : @storage
        CONTRACT %run (pair (contract %k nat) (nat %x)); # option (contract (pair (contract %k nat) (nat %x))) : @parameter%run : @storage
        NIL operation; # list operation : option (contract (pair (contract %k nat) (nat %x))) : @parameter%run : @storage
        SWAP;       # option (contract (pair (contract %k nat) (nat %x))) : list operation : @parameter%run : @storage
        IF_SOME
          {}
          {
            PUSH int 24; # int : list operation : @parameter%run : @storage
            FAILWITH;   # FAILED
          }; # @some : list operation : @parameter%run : @storage
        PUSH mutez 0; # mutez : @some : list operation : @parameter%run : @storage
        DIG 3;      # @parameter%run : mutez : @some : list operation : @storage
        CDR;        # nat : mutez : @some : list operation : @storage
        SELF;       # contract (or (bool %receiveResult) (pair %run (address %k) (nat %x))) : nat : mutez : @some : list operation : @storage
        ADDRESS;    # address : nat : mutez : @some : list operation : @storage
        CONTRACT %receiveResult nat; # option (contract nat) : nat : mutez : @some : list operation : @storage
        IF_SOME
          {}
          {
            PUSH int 25; # int : nat : mutez : @some : list operation : @storage
            FAILWITH;   # FAILED
          }; # @some : nat : mutez : @some : list operation : @storage
        PAIR %k %x; # pair (@some %k) (nat %x) : mutez : @some : list operation : @storage
        TRANSFER_TOKENS; # operation : list operation : @storage
        CONS;       # list operation : @storage
      }; # list operation : @parameter%receiveResult
    PAIR;       # pair (list operation) @parameter%receiveResult
  };